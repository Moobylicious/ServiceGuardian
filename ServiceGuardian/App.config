<?xml version="1.0" encoding="utf-8" ?>
<configuration>
  <configSections>
    <!--<section name="log4net" type="log4net.Config.Log4NetConfigurationSectionHandler, log4net" />-->
      <section name="nlog" type="NLog.Config.ConfigSectionHandler, NLog"/>
    <section name="MonitoredServices" type="ServiceGuardian.Configuration.MonitoredServicesConfig, ServiceGuardian"/>
  </configSections>

  <appSettings>
    <add key="ServiceName" value="PlaysafePerformanceGuardian"/>
    <add key="ServiceDisplayName" value="PlaysafePerformanceGuardian"/>
    <add key="ServiceDescription" value="Playsafe Performance Guardian Service - Helps ensure other services are running"/>    
  </appSettings>

  <MonitoredServices>
    <Services>      
      <!-- TopShelf service with automatic install, check every 5 seconds.-->
<!--      <add name="TestSvc" path="d:\temp\testSvc\testSvc.exe" checkFrequency="5"/>-->
      
      <!-- Monitored only service, never installed. default check frequency (60s)-->
      <add name="QuantumApi"/>

      <!-- service installed via SC command line.  Note: Doesn't usually work unless running as an app with admin rights! -->
      <!--<add 
        name="AnotherTestService2" 
        path="d:\temp\testSvc\testSvc.exe" 
        install="sc create AnotherTestService binPath= d:\temp\testsvc\testsvc.exe"
        checkFrequency="7"
        />-->
      
    </Services>
  </MonitoredServices>
  
  <startup>
    <supportedRuntime version="v4.0" sku=".NETFramework,Version=v4.6.2" />
  </startup>
  <nlog xmlns="http://www.nlog-project.org/schemas/NLog.xsd"
      xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
      xsi:schemaLocation="http://www.nlog-project.org/schemas/NLog.xsd NLog.xsd"
      autoReload="true"
      throwExceptions="false"
      internalLogLevel="Off" internalLogFile="logs\nlog-internal.log" >
    <time type="FastUTC" />
    
    <targets>
      <target name="file" xsi:type="File"
                fileName="${basedir}/Logs/${shortdate}.log"
                layout="[${longdate}] [${uppercase:${level}}] [${logger}] ${message} ${exception:format=tostring}"
                concurrentWrites="false" keepFileOpen="false"/>
      <target name="console" xsi:type="ColoredConsole"
              layout="[${longdate}] [${uppercase:${level}}] [${logger:shortName=true}] ${message} ${exception:format=tostring}" />
    </targets>
    <rules>
      <logger name="*" writeTo="console,file" minLevel="Info" />
    </rules>
  </nlog>
</configuration>
